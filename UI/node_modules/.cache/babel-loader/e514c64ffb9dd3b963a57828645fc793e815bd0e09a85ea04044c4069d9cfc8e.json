{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\sql_ui\\\\src\\\\components\\\\MessageBubble.tsx\";\n// src/components/MessageBubble.tsx\nimport React from 'react';\n// import QuoteDisplay from './QuoteDisplay'; // Keep if you still want a custom component for some data\nimport ReactMarkdown from 'react-markdown'; // Import ReactMarkdown\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MessageBubble = ({\n  message\n}) => {\n  const isAI = message.sender === 'AI';\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      justifyContent: isAI ? 'flex-start' : 'flex-end',\n      margin: '8px 0',\n      padding: '0 15px'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        maxWidth: '75%',\n        padding: '12px 16px',\n        borderRadius: '18px',\n        backgroundColor: isAI ? '#e9ecef' : '#007bff',\n        color: isAI ? '#212529' : 'white',\n        wordWrap: 'break-word',\n        boxShadow: '0 1px 3px rgba(0,0,0,0.1)'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        style: {\n          fontSize: '0.8em',\n          opacity: 0.7,\n          display: 'block',\n          marginBottom: '4px',\n          color: isAI ? '#495057' : 'rgba(255,255,255,0.8)'\n        },\n        children: isAI ? 'AI' : 'You'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), message.text && /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n        children: message.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 26\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n_c = MessageBubble;\nexport default MessageBubble;\nvar _c;\n$RefreshReg$(_c, \"MessageBubble\");","map":{"version":3,"names":["React","ReactMarkdown","jsxDEV","_jsxDEV","MessageBubble","message","isAI","sender","style","display","justifyContent","margin","padding","children","maxWidth","borderRadius","backgroundColor","color","wordWrap","boxShadow","fontSize","opacity","marginBottom","fileName","_jsxFileName","lineNumber","columnNumber","text","_c","$RefreshReg$"],"sources":["C:/Users/Admin/sql_ui/src/components/MessageBubble.tsx"],"sourcesContent":["// src/components/MessageBubble.tsx\r\nimport React from 'react';\r\nimport { Message } from '../types';\r\n// import QuoteDisplay from './QuoteDisplay'; // Keep if you still want a custom component for some data\r\nimport ReactMarkdown from 'react-markdown'; // Import ReactMarkdown\r\n\r\ninterface MessageBubbleProps {\r\n  message: Message;\r\n}\r\n\r\nconst MessageBubble: React.FC<MessageBubbleProps> = ({ message }) => {\r\n  const isAI = message.sender === 'AI';\r\n\r\n  return (\r\n    <div style={{\r\n      display: 'flex',\r\n      justifyContent: isAI ? 'flex-start' : 'flex-end',\r\n      margin: '8px 0',\r\n      padding: '0 15px'\r\n    }}>\r\n      <div style={{\r\n        maxWidth: '75%',\r\n        padding: '12px 16px',\r\n        borderRadius: '18px',\r\n        backgroundColor: isAI ? '#e9ecef' : '#007bff',\r\n        color: isAI ? '#212529' : 'white',\r\n        wordWrap: 'break-word',\r\n        boxShadow: '0 1px 3px rgba(0,0,0,0.1)'\r\n      }}>\r\n        <strong style={{\r\n          fontSize: '0.8em',\r\n          opacity: 0.7,\r\n          display: 'block',\r\n          marginBottom: '4px',\r\n          color: isAI ? '#495057' : 'rgba(255,255,255,0.8)'\r\n        }}>\r\n          {isAI ? 'AI' : 'You'}\r\n        </strong>\r\n        {/* Use ReactMarkdown to render the text content */}\r\n        {message.text && <ReactMarkdown>{message.text}</ReactMarkdown>}\r\n        \r\n        {/*\r\n        // IMPORTANT: If your backend is now producing formatted text for quotes\r\n        // you might not need the `quoteDetails` property and the `QuoteDisplay` component.\r\n        // The LLM's response.text will contain the formatted quote.\r\n        // You can uncomment the line below ONLY if you still have a separate, custom parsing\r\n        // logic in ChatContainer for 'quoteDetails' and want a *custom UI component*\r\n        // for quotes, rather than just Markdown.\r\n        */}\r\n        {/* {message.quoteDetails && <QuoteDisplay {...message.quoteDetails} />} */}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MessageBubble;"],"mappings":";AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AAEzB;AACA,OAAOC,aAAa,MAAM,gBAAgB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAM5C,MAAMC,aAA2C,GAAGA,CAAC;EAAEC;AAAQ,CAAC,KAAK;EACnE,MAAMC,IAAI,GAAGD,OAAO,CAACE,MAAM,KAAK,IAAI;EAEpC,oBACEJ,OAAA;IAAKK,KAAK,EAAE;MACVC,OAAO,EAAE,MAAM;MACfC,cAAc,EAAEJ,IAAI,GAAG,YAAY,GAAG,UAAU;MAChDK,MAAM,EAAE,OAAO;MACfC,OAAO,EAAE;IACX,CAAE;IAAAC,QAAA,eACAV,OAAA;MAAKK,KAAK,EAAE;QACVM,QAAQ,EAAE,KAAK;QACfF,OAAO,EAAE,WAAW;QACpBG,YAAY,EAAE,MAAM;QACpBC,eAAe,EAAEV,IAAI,GAAG,SAAS,GAAG,SAAS;QAC7CW,KAAK,EAAEX,IAAI,GAAG,SAAS,GAAG,OAAO;QACjCY,QAAQ,EAAE,YAAY;QACtBC,SAAS,EAAE;MACb,CAAE;MAAAN,QAAA,gBACAV,OAAA;QAAQK,KAAK,EAAE;UACbY,QAAQ,EAAE,OAAO;UACjBC,OAAO,EAAE,GAAG;UACZZ,OAAO,EAAE,OAAO;UAChBa,YAAY,EAAE,KAAK;UACnBL,KAAK,EAAEX,IAAI,GAAG,SAAS,GAAG;QAC5B,CAAE;QAAAO,QAAA,EACCP,IAAI,GAAG,IAAI,GAAG;MAAK;QAAAiB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACd,CAAC,EAERrB,OAAO,CAACsB,IAAI,iBAAIxB,OAAA,CAACF,aAAa;QAAAY,QAAA,EAAER,OAAO,CAACsB;MAAI;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAgB,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAW3D;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACE,EAAA,GA3CIxB,aAA2C;AA6CjD,eAAeA,aAAa;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}