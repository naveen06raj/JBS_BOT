{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\sql_ui\\\\src\\\\components\\\\ChatContainer.tsx\",\n  _s = $RefreshSig$();\n// src/components/ChatContainer.tsx\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport ChatHeader from './ChatHeader';\nimport MessageBubble from './MessageBubble';\nimport UserInput from './UserInput';\nimport { v4 as uuidv4 } from 'uuid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatContainer = () => {\n  _s();\n  const [messages, setMessages] = useState([{\n    id: uuidv4(),\n    sender: 'AI',\n    text: 'Hello! I am your AI CRM Assistant. How can I help you today?'\n  }, {\n    id: uuidv4(),\n    sender: 'You',\n    text: 'Show me the quotes related to lead LD00049'\n  }, {\n    id: uuidv4(),\n    sender: 'AI',\n    text: 'Certainly! Here are the quotes related to lead LD00049 for Kumaran Hospital:',\n    quoteDetails: {\n      quotationNumber: 'QOT001',\n      status: 'Pending',\n      date: 'July 12, 2025',\n      totalAmount: 2000.00,\n      items: [{\n        itemID: '101',\n        units: 2,\n        unitPrice: 250.00,\n        total: 500.00\n      }, {\n        itemID: '102',\n        units: 1,\n        unitPrice: 1500.00,\n        total: 1500.00\n      }],\n      leadInfo: 'for Kumaran Hospital'\n    }\n  }, {\n    id: uuidv4(),\n    sender: 'AI',\n    text: 'Quotation: QOT002 (Revision) - This is a separate quote update.'\n  }]);\n  const messagesEndRef = useRef(null);\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  };\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n  const handleSendMessage = text => {\n    const newMessage = {\n      id: uuidv4(),\n      sender: 'You',\n      text: text\n    };\n    setMessages(prevMessages => [...prevMessages, newMessage]);\n\n    // Simulate AI response\n    setTimeout(() => {\n      const aiResponse = {\n        id: uuidv4(),\n        sender: 'AI',\n        text: `Echo from AI: \"${text}\". I'm still learning to respond to new queries!`\n      };\n      setMessages(prevMessages => [...prevMessages, aiResponse]);\n    }, 1000);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: '100%',\n      maxWidth: '750px',\n      // Slightly narrower for a more compact feel\n      height: '85vh',\n      // Slightly taller\n      margin: '20px auto',\n      border: 'none',\n      // Remove main border\n      borderRadius: '8px',\n      display: 'flex',\n      flexDirection: 'column',\n      boxShadow: '0 8px 25px rgba(0,0,0,0.25)',\n      // More pronounced, softer shadow for the whole box\n      backgroundColor: 'white',\n      overflow: 'hidden'\n    },\n    children: [/*#__PURE__*/_jsxDEV(ChatHeader, {\n      title: \"AI CRM Assistant\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        flexGrow: 1,\n        overflowY: 'auto',\n        padding: '10px 0',\n        backgroundColor: '#f8f9fa',\n        // Very light background for chat area\n        borderBottom: '1px solid #e0e0e0' // Subtle border before input\n      },\n      children: [messages.map(msg => /*#__PURE__*/_jsxDEV(MessageBubble, {\n        message: msg\n      }, msg.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: messagesEndRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(UserInput, {\n      onSendMessage: handleSendMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatContainer, \"MPqskOIJlk6iXBBfBvNAVyzKG90=\");\n_c = ChatContainer;\nexport default ChatContainer;\nvar _c;\n$RefreshReg$(_c, \"ChatContainer\");","map":{"version":3,"names":["React","useState","useEffect","useRef","ChatHeader","MessageBubble","UserInput","v4","uuidv4","jsxDEV","_jsxDEV","ChatContainer","_s","messages","setMessages","id","sender","text","quoteDetails","quotationNumber","status","date","totalAmount","items","itemID","units","unitPrice","total","leadInfo","messagesEndRef","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","handleSendMessage","newMessage","prevMessages","setTimeout","aiResponse","style","width","maxWidth","height","margin","border","borderRadius","display","flexDirection","boxShadow","backgroundColor","overflow","children","title","fileName","_jsxFileName","lineNumber","columnNumber","flexGrow","overflowY","padding","borderBottom","map","msg","message","ref","onSendMessage","_c","$RefreshReg$"],"sources":["C:/Users/Admin/sql_ui/src/components/ChatContainer.tsx"],"sourcesContent":["// src/components/ChatContainer.tsx\r\n\r\nimport React, { useState, useEffect, useRef } from 'react';\r\nimport ChatHeader from './ChatHeader';\r\nimport MessageBubble from './MessageBubble';\r\nimport UserInput from './UserInput';\r\nimport { Message, QuoteDisplayProps } from '../types';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nconst ChatContainer: React.FC = () => {\r\n  const [messages, setMessages] = useState<Message[]>([\r\n    {\r\n      id: uuidv4(),\r\n      sender: 'AI',\r\n      text: 'Hello! I am your AI CRM Assistant. How can I help you today?',\r\n    },\r\n    {\r\n      id: uuidv4(),\r\n      sender: 'You',\r\n      text: 'Show me the quotes related to lead LD00049',\r\n    },\r\n    {\r\n      id: uuidv4(),\r\n      sender: 'AI',\r\n      text: 'Certainly! Here are the quotes related to lead LD00049 for Kumaran Hospital:',\r\n      quoteDetails: {\r\n        quotationNumber: 'QOT001',\r\n        status: 'Pending',\r\n        date: 'July 12, 2025',\r\n        totalAmount: 2000.00,\r\n        items: [\r\n          { itemID: '101', units: 2, unitPrice: 250.00, total: 500.00 },\r\n          { itemID: '102', units: 1, unitPrice: 1500.00, total: 1500.00 },\r\n        ],\r\n        leadInfo: 'for Kumaran Hospital',\r\n      },\r\n    },\r\n    {\r\n      id: uuidv4(),\r\n      sender: 'AI',\r\n      text: 'Quotation: QOT002 (Revision) - This is a separate quote update.',\r\n    },\r\n  ]);\r\n\r\n  const messagesEndRef = useRef<HTMLDivElement>(null);\r\n\r\n  const scrollToBottom = () => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n  };\r\n\r\n  useEffect(() => {\r\n    scrollToBottom();\r\n  }, [messages]);\r\n\r\n  const handleSendMessage = (text: string) => {\r\n    const newMessage: Message = {\r\n      id: uuidv4(),\r\n      sender: 'You',\r\n      text: text,\r\n    };\r\n    setMessages((prevMessages) => [...prevMessages, newMessage]);\r\n\r\n    // Simulate AI response\r\n    setTimeout(() => {\r\n      const aiResponse: Message = {\r\n        id: uuidv4(),\r\n        sender: 'AI',\r\n        text: `Echo from AI: \"${text}\". I'm still learning to respond to new queries!`,\r\n      };\r\n      setMessages((prevMessages) => [...prevMessages, aiResponse]);\r\n    }, 1000);\r\n  };\r\n\r\n  return (\r\n    <div style={{\r\n      width: '100%',\r\n      maxWidth: '750px', // Slightly narrower for a more compact feel\r\n      height: '85vh', // Slightly taller\r\n      margin: '20px auto',\r\n      border: 'none', // Remove main border\r\n      borderRadius: '8px',\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      boxShadow: '0 8px 25px rgba(0,0,0,0.25)', // More pronounced, softer shadow for the whole box\r\n      backgroundColor: 'white',\r\n      overflow: 'hidden'\r\n    }}>\r\n      <ChatHeader title=\"AI CRM Assistant\" />\r\n      <div style={{\r\n        flexGrow: 1,\r\n        overflowY: 'auto',\r\n        padding: '10px 0',\r\n        backgroundColor: '#f8f9fa', // Very light background for chat area\r\n        borderBottom: '1px solid #e0e0e0' // Subtle border before input\r\n      }}>\r\n        {messages.map((msg) => (\r\n          <MessageBubble key={msg.id} message={msg} />\r\n        ))}\r\n        <div ref={messagesEndRef} />\r\n      </div>\r\n      <UserInput onSendMessage={handleSendMessage} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatContainer;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}